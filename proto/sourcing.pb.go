// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.26.1
// source: sourcing.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Id struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Id) Reset() {
	*x = Id{}
	mi := &file_sourcing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_sourcing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_sourcing_proto_rawDescGZIP(), []int{0}
}

func (x *Id) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type SubStoreEvent struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AggregateId      *Id                    `protobuf:"bytes,1,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	AggregateType    string                 `protobuf:"bytes,2,opt,name=aggregate_type,json=aggregateType,proto3" json:"aggregate_type,omitempty"`
	AggregateVersion uint64                 `protobuf:"varint,3,opt,name=aggregate_version,json=aggregateVersion,proto3" json:"aggregate_version,omitempty"`
	StoreVersion     uint64                 `protobuf:"varint,4,opt,name=store_version,json=storeVersion,proto3" json:"store_version,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Data             *anypb.Any             `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Metadata         map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SubStoreEvent) Reset() {
	*x = SubStoreEvent{}
	mi := &file_sourcing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubStoreEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubStoreEvent) ProtoMessage() {}

func (x *SubStoreEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sourcing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubStoreEvent.ProtoReflect.Descriptor instead.
func (*SubStoreEvent) Descriptor() ([]byte, []int) {
	return file_sourcing_proto_rawDescGZIP(), []int{1}
}

func (x *SubStoreEvent) GetAggregateId() *Id {
	if x != nil {
		return x.AggregateId
	}
	return nil
}

func (x *SubStoreEvent) GetAggregateType() string {
	if x != nil {
		return x.AggregateType
	}
	return ""
}

func (x *SubStoreEvent) GetAggregateVersion() uint64 {
	if x != nil {
		return x.AggregateVersion
	}
	return 0
}

func (x *SubStoreEvent) GetStoreVersion() uint64 {
	if x != nil {
		return x.StoreVersion
	}
	return 0
}

func (x *SubStoreEvent) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SubStoreEvent) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SubStoreEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       *Id                    `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	GlobalVersion uint64                 `protobuf:"varint,2,opt,name=global_version,json=globalVersion,proto3" json:"global_version,omitempty"`
	SubStoreEvent *SubStoreEvent         `protobuf:"bytes,3,opt,name=sub_store_event,json=subStoreEvent,proto3" json:"sub_store_event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_sourcing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_sourcing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_sourcing_proto_rawDescGZIP(), []int{2}
}

func (x *Event) GetStoreId() *Id {
	if x != nil {
		return x.StoreId
	}
	return nil
}

func (x *Event) GetGlobalVersion() uint64 {
	if x != nil {
		return x.GlobalVersion
	}
	return 0
}

func (x *Event) GetSubStoreEvent() *SubStoreEvent {
	if x != nil {
		return x.SubStoreEvent
	}
	return nil
}

type BusPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*BusPayload_CommittedEvent_
	//	*BusPayload_RequestRsync_
	//	*BusPayload_ResponseRsync_
	//	*BusPayload_HeartBeat_
	Payload       isBusPayload_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BusPayload) Reset() {
	*x = BusPayload{}
	mi := &file_sourcing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusPayload) ProtoMessage() {}

func (x *BusPayload) ProtoReflect() protoreflect.Message {
	mi := &file_sourcing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusPayload.ProtoReflect.Descriptor instead.
func (*BusPayload) Descriptor() ([]byte, []int) {
	return file_sourcing_proto_rawDescGZIP(), []int{3}
}

func (x *BusPayload) GetPayload() isBusPayload_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *BusPayload) GetCommittedEvent() *BusPayload_CommittedEvent {
	if x != nil {
		if x, ok := x.Payload.(*BusPayload_CommittedEvent_); ok {
			return x.CommittedEvent
		}
	}
	return nil
}

func (x *BusPayload) GetRequestRsync() *BusPayload_RequestRsync {
	if x != nil {
		if x, ok := x.Payload.(*BusPayload_RequestRsync_); ok {
			return x.RequestRsync
		}
	}
	return nil
}

func (x *BusPayload) GetResponseRsync() *BusPayload_ResponseRsync {
	if x != nil {
		if x, ok := x.Payload.(*BusPayload_ResponseRsync_); ok {
			return x.ResponseRsync
		}
	}
	return nil
}

func (x *BusPayload) GetHeartBeat() *BusPayload_HeartBeat {
	if x != nil {
		if x, ok := x.Payload.(*BusPayload_HeartBeat_); ok {
			return x.HeartBeat
		}
	}
	return nil
}

type isBusPayload_Payload interface {
	isBusPayload_Payload()
}

type BusPayload_CommittedEvent_ struct {
	CommittedEvent *BusPayload_CommittedEvent `protobuf:"bytes,1,opt,name=committed_event,json=committedEvent,proto3,oneof"`
}

type BusPayload_RequestRsync_ struct {
	RequestRsync *BusPayload_RequestRsync `protobuf:"bytes,2,opt,name=request_rsync,json=requestRsync,proto3,oneof"`
}

type BusPayload_ResponseRsync_ struct {
	ResponseRsync *BusPayload_ResponseRsync `protobuf:"bytes,3,opt,name=response_rsync,json=responseRsync,proto3,oneof"`
}

type BusPayload_HeartBeat_ struct {
	HeartBeat *BusPayload_HeartBeat `protobuf:"bytes,4,opt,name=heart_beat,json=heartBeat,proto3,oneof"`
}

func (*BusPayload_CommittedEvent_) isBusPayload_Payload() {}

func (*BusPayload_RequestRsync_) isBusPayload_Payload() {}

func (*BusPayload_ResponseRsync_) isBusPayload_Payload() {}

func (*BusPayload_HeartBeat_) isBusPayload_Payload() {}

type BusPayload_Header struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       *Id                    `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BusPayload_Header) Reset() {
	*x = BusPayload_Header{}
	mi := &file_sourcing_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusPayload_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusPayload_Header) ProtoMessage() {}

func (x *BusPayload_Header) ProtoReflect() protoreflect.Message {
	mi := &file_sourcing_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusPayload_Header.ProtoReflect.Descriptor instead.
func (*BusPayload_Header) Descriptor() ([]byte, []int) {
	return file_sourcing_proto_rawDescGZIP(), []int{3, 0}
}

func (x *BusPayload_Header) GetStoreId() *Id {
	if x != nil {
		return x.StoreId
	}
	return nil
}

type BusPayload_CommittedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BusPayload_CommittedEvent) Reset() {
	*x = BusPayload_CommittedEvent{}
	mi := &file_sourcing_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusPayload_CommittedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusPayload_CommittedEvent) ProtoMessage() {}

func (x *BusPayload_CommittedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sourcing_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusPayload_CommittedEvent.ProtoReflect.Descriptor instead.
func (*BusPayload_CommittedEvent) Descriptor() ([]byte, []int) {
	return file_sourcing_proto_rawDescGZIP(), []int{3, 1}
}

func (x *BusPayload_CommittedEvent) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type BusPayload_RequestRsync struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *BusPayload_Header     `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	From          uint64                 `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BusPayload_RequestRsync) Reset() {
	*x = BusPayload_RequestRsync{}
	mi := &file_sourcing_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusPayload_RequestRsync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusPayload_RequestRsync) ProtoMessage() {}

func (x *BusPayload_RequestRsync) ProtoReflect() protoreflect.Message {
	mi := &file_sourcing_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusPayload_RequestRsync.ProtoReflect.Descriptor instead.
func (*BusPayload_RequestRsync) Descriptor() ([]byte, []int) {
	return file_sourcing_proto_rawDescGZIP(), []int{3, 2}
}

func (x *BusPayload_RequestRsync) GetHeader() *BusPayload_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BusPayload_RequestRsync) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

type BusPayload_ResponseRsync struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *BusPayload_Header     `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Events        []*SubStoreEvent       `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BusPayload_ResponseRsync) Reset() {
	*x = BusPayload_ResponseRsync{}
	mi := &file_sourcing_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusPayload_ResponseRsync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusPayload_ResponseRsync) ProtoMessage() {}

func (x *BusPayload_ResponseRsync) ProtoReflect() protoreflect.Message {
	mi := &file_sourcing_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusPayload_ResponseRsync.ProtoReflect.Descriptor instead.
func (*BusPayload_ResponseRsync) Descriptor() ([]byte, []int) {
	return file_sourcing_proto_rawDescGZIP(), []int{3, 3}
}

func (x *BusPayload_ResponseRsync) GetHeader() *BusPayload_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BusPayload_ResponseRsync) GetEvents() []*SubStoreEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type BusPayload_HeartBeat struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Header           *BusPayload_Header     `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	LastStoreVersion uint64                 `protobuf:"varint,2,opt,name=last_store_version,json=lastStoreVersion,proto3" json:"last_store_version,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BusPayload_HeartBeat) Reset() {
	*x = BusPayload_HeartBeat{}
	mi := &file_sourcing_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusPayload_HeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusPayload_HeartBeat) ProtoMessage() {}

func (x *BusPayload_HeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_sourcing_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusPayload_HeartBeat.ProtoReflect.Descriptor instead.
func (*BusPayload_HeartBeat) Descriptor() ([]byte, []int) {
	return file_sourcing_proto_rawDescGZIP(), []int{3, 4}
}

func (x *BusPayload_HeartBeat) GetHeader() *BusPayload_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BusPayload_HeartBeat) GetLastStoreVersion() uint64 {
	if x != nil {
		return x.LastStoreVersion
	}
	return 0
}

var File_sourcing_proto protoreflect.FileDescriptor

var file_sourcing_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x69, 0x6e, 0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9e, 0x03, 0x0a,
	0x0d, 0x53, 0x75, 0x62, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2f,
	0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x69, 0x6e, 0x67, 0x2e,
	0x49, 0x64, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x75, 0x62, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x98, 0x01,
	0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x64, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x75, 0x62, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xeb, 0x05, 0x0a, 0x0a, 0x42, 0x75, 0x73,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4e, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x75, 0x73, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x72, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x75, 0x73, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x73, 0x79, 0x6e,
	0x63, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x73, 0x79, 0x6e,
	0x63, 0x12, 0x4b, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x72, 0x73,
	0x79, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x75, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x73, 0x79, 0x6e, 0x63, 0x48, 0x00, 0x52,
	0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x3f,
	0x0a, 0x0a, 0x68, 0x65, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x65, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x75,
	0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65,
	0x61, 0x74, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x1a,
	0x31, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x08, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x64, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x1a, 0x37, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x57, 0x0a, 0x0c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x33, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x75, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x1a, 0x75, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x33, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x69, 0x6e, 0x67,
	0x2e, 0x42, 0x75, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x75, 0x62, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x6e, 0x0a, 0x09, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x69, 0x6e, 0x67, 0x2e, 0x42, 0x75, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x68, 0x68, 0x69, 0x6c, 0x66, 0x65, 0x2f, 0x70, 0x62,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_sourcing_proto_rawDescOnce sync.Once
	file_sourcing_proto_rawDescData []byte
)

func file_sourcing_proto_rawDescGZIP() []byte {
	file_sourcing_proto_rawDescOnce.Do(func() {
		file_sourcing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sourcing_proto_rawDesc), len(file_sourcing_proto_rawDesc)))
	})
	return file_sourcing_proto_rawDescData
}

var file_sourcing_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_sourcing_proto_goTypes = []any{
	(*Id)(nil),                        // 0: sourcing.Id
	(*SubStoreEvent)(nil),             // 1: sourcing.SubStoreEvent
	(*Event)(nil),                     // 2: sourcing.Event
	(*BusPayload)(nil),                // 3: sourcing.BusPayload
	nil,                               // 4: sourcing.SubStoreEvent.MetadataEntry
	(*BusPayload_Header)(nil),         // 5: sourcing.BusPayload.Header
	(*BusPayload_CommittedEvent)(nil), // 6: sourcing.BusPayload.CommittedEvent
	(*BusPayload_RequestRsync)(nil),   // 7: sourcing.BusPayload.RequestRsync
	(*BusPayload_ResponseRsync)(nil),  // 8: sourcing.BusPayload.ResponseRsync
	(*BusPayload_HeartBeat)(nil),      // 9: sourcing.BusPayload.HeartBeat
	(*timestamppb.Timestamp)(nil),     // 10: google.protobuf.Timestamp
	(*anypb.Any)(nil),                 // 11: google.protobuf.Any
}
var file_sourcing_proto_depIdxs = []int32{
	0,  // 0: sourcing.SubStoreEvent.aggregate_id:type_name -> sourcing.Id
	10, // 1: sourcing.SubStoreEvent.created_at:type_name -> google.protobuf.Timestamp
	11, // 2: sourcing.SubStoreEvent.data:type_name -> google.protobuf.Any
	4,  // 3: sourcing.SubStoreEvent.metadata:type_name -> sourcing.SubStoreEvent.MetadataEntry
	0,  // 4: sourcing.Event.store_id:type_name -> sourcing.Id
	1,  // 5: sourcing.Event.sub_store_event:type_name -> sourcing.SubStoreEvent
	6,  // 6: sourcing.BusPayload.committed_event:type_name -> sourcing.BusPayload.CommittedEvent
	7,  // 7: sourcing.BusPayload.request_rsync:type_name -> sourcing.BusPayload.RequestRsync
	8,  // 8: sourcing.BusPayload.response_rsync:type_name -> sourcing.BusPayload.ResponseRsync
	9,  // 9: sourcing.BusPayload.heart_beat:type_name -> sourcing.BusPayload.HeartBeat
	0,  // 10: sourcing.BusPayload.Header.store_id:type_name -> sourcing.Id
	2,  // 11: sourcing.BusPayload.CommittedEvent.event:type_name -> sourcing.Event
	5,  // 12: sourcing.BusPayload.RequestRsync.header:type_name -> sourcing.BusPayload.Header
	5,  // 13: sourcing.BusPayload.ResponseRsync.header:type_name -> sourcing.BusPayload.Header
	1,  // 14: sourcing.BusPayload.ResponseRsync.events:type_name -> sourcing.SubStoreEvent
	5,  // 15: sourcing.BusPayload.HeartBeat.header:type_name -> sourcing.BusPayload.Header
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_sourcing_proto_init() }
func file_sourcing_proto_init() {
	if File_sourcing_proto != nil {
		return
	}
	file_sourcing_proto_msgTypes[3].OneofWrappers = []any{
		(*BusPayload_CommittedEvent_)(nil),
		(*BusPayload_RequestRsync_)(nil),
		(*BusPayload_ResponseRsync_)(nil),
		(*BusPayload_HeartBeat_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sourcing_proto_rawDesc), len(file_sourcing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sourcing_proto_goTypes,
		DependencyIndexes: file_sourcing_proto_depIdxs,
		MessageInfos:      file_sourcing_proto_msgTypes,
	}.Build()
	File_sourcing_proto = out.File
	file_sourcing_proto_goTypes = nil
	file_sourcing_proto_depIdxs = nil
}
